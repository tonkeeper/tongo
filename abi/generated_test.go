package abi

import (
	"context"
	"encoding/hex"
	"fmt"
	"math/big"
	"reflect"
	"testing"

	"github.com/tonkeeper/tongo/boc"
	"github.com/tonkeeper/tongo/liteapi"
	"github.com/tonkeeper/tongo/tlb"
	"github.com/tonkeeper/tongo/ton"
	"github.com/tonkeeper/tongo/tvm"
)

func mustToAddress(x string) ton.AccountID {
	accountID, err := ton.AccountIDFromRaw(x)
	if err != nil {
		panic(err)
	}
	return accountID
}

func mustToBits256(s string) tlb.Bits256 {
	bits := tlb.Bits256{}
	bs, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	if len(bs) != 32 {
		panic(fmt.Sprintf("wrong length"))
	}
	copy(bits[:], bs[:])
	return bits
}

func mustToBits512(s string) tlb.Bits512 {
	bits := tlb.Bits512{}
	bs, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	if len(bs) != 64 {
		panic(fmt.Sprintf("wrong length"))
	}
	copy(bits[:], bs[:])
	return bits
}

func mustToBoc(a *boc.Cell) string {
	if a == nil {
		return ""
	}
	cell := boc.NewCell()
	if err := tlb.Marshal(cell, *a); err != nil {
		panic(err)
	}
	s, err := cell.ToBocString()
	if err != nil {
		panic(err)
	}
	return s
}

func mustToVarUInteger16(s string) tlb.VarUInteger16 {
	i := big.Int{}
	i.SetString(s, 10)
	return tlb.VarUInteger16(i)
}

func mustToMsgAddress(x string) tlb.MsgAddress {
	accountID, err := ton.AccountIDFromRaw(x)
	if err != nil {
		panic(err)
	}
	addr := tlb.MsgAddress{
		SumType: "AddrStd",
		AddrStd: struct {
			Anycast     tlb.Maybe[tlb.Anycast]
			WorkchainId int8
			Address     tlb.Bits256
		}{
			WorkchainId: int8(accountID.Workchain),
			Address:     accountID.Address,
		},
	}
	return addr
}

func TestGetMethods(t *testing.T) {
	tests := []struct {
		name         string
		code         string
		data         string
		account      string
		method       InvokeFn
		want         any
		wantTypeHint string
		wantError    string
	}{
		{
			name:         "GetSaleData for getgems auction",
			code:         "b5ee9c7201023501000b69000114ff00f4a413f4bcf2c80b010201200232020148032f0202ce042c020120052b04f5007434c0c05c6c3c903e900c36cf3e10b03ffe10d48831c16c23b40ccc74c7c87000234127265706561745f656e645f61756374696f6e8148831c16c23a0d6f6cf380cb00023411656d657267656e63795f6d6573736167658148831c16c26b50c3434c1f50c007ec0380c383e14d48431c163a10ccc76cf380060331f0c0e00caf8416edded44d0d20001f862d20001f864d20001f866fa4001f86dfa0001f86ed31f01f86fd31f01f870fa4001f872d401f868d430f869f849d0d21f01f867fa4001f863fa0001f86afa0001f86bfa0001f86cd31f01f871fa4001f873d31f30f8657ff8610294f84ec0008e3d7020f82582105fcc3d14c8cb1fcb3ff852cf165003cf1612cb0021fa02cb00c9718018c8cb05f853cf1670fa02cb6acc82080f424070fb02c98306fb00e30e7ff862db3c203402fadb3cf84e4054f00320c2008e2b70208010c8cb055007cf1622fa0216cb6a15cb1f8bf4d61726b6574706c616365206665658cf16c972fb009134e2f84e4003f00320c2008e2370208010c8cb055004cf1622fa0213cb6a12cb1f8b7526f79616c74798cf16c972fb009131e282080f424070fb02f84e58a101a120c20031220020f848d0fa40d31fd31ffa40d31fd31f3000c08e2270208010c8cb05f852cf165003fa0212cb6acb1f8b650726f6669748cf16c972fb009130e27020f82582105fcc3d14c8cb1fcb3ff84dcf165003cf1612cb008208989680fa02cb00c9718018c8cb05f853cf1670fa02cb6accc98306fb000054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed54015c318103e9f852d749c202f2f28103ea01d31f821005138d9112ba12f2f48040d721fa4030f87270f8627ff864db3c340054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed540486db3c20c0018f38308103edf823f850bef2f28103edf842c0fff2f28103f00282103b9aca00b912f2f2f8525210c705f8435220c705b1f2e193017fdb3cdb3ce020c0020f271315008c20c700c0ff923070e0d31f318b663616e63656c821c705923071e08b473746f70821c705923072e08b666696e697368821c705923072e08b66465706c6f79801c7059173e07002f2f84ec101915be0f84ef847a1228208989680a15210bc9930018208989680a1019132e28d0a565bdd5c88189a59081a185cc81899595b881bdd5d189a5908189e48185b9bdd1a195c881d5cd95c8ba001c0ff8e1f308d06d05d58dd1a5bdb881a185cc81899595b8818d85b98d95b1b19590ba0de21c200e30f2829003870208018c8cb05f84dcf165004fa0213cb6a12cb1f01cf16c972fb0000025b018a7020f82582105fcc3d14c8cb1fcb3ff852cf165003cf1612cb0021fa02cb00c9718018c8cb05f853cf1670fa02cb6acc82080f424070fb02c98306fb007ff8627ff866db3c340054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed5404fc8ec330328103edf842c0fff2f28103f00182103b9aca00b9f2f2f823f850be8e17f8525210c705f8435220c705b1f84d5220c705b1f2e19399f8525210c705f2e193e2db3ce0c003925f03e0f842c0fff823f850beb1975f038103edf2f0e0f84b82103b9aca00a05220bef84bc200b0e302f850f851a1f823b9e300f84e1f1b24250294f84ec0008e3d7020f82582105fcc3d14c8cb1fcb3ff852cf165003cf1612cb0021fa02cb00c9718018c8cb05f853cf1670fa02cb6acc82080f424070fb02c98306fb00e30e7ff862db3c203402fadb3cf84e4054f00320c2008e2b70208010c8cb055007cf1622fa0216cb6a15cb1f8bf4d61726b6574706c616365206665658cf16c972fb009134e2f84e4003f00320c2008e2370208010c8cb055004cf1622fa0213cb6a12cb1f8b7526f79616c74798cf16c972fb009131e282080f424070fb02f84e58a101a120c20031220020f848d0fa40d31fd31ffa40d31fd31f3000c08e2270208010c8cb05f852cf165003fa0212cb6acb1f8b650726f6669748cf16c972fb009130e27020f82582105fcc3d14c8cb1fcb3ff84dcf165003cf1612cb008208989680fa02cb00c9718018c8cb05f853cf1670fa02cb6accc98306fb000054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed54022c0270db3c21f86d82103b9aca00a1f86ef823f86fdb3c271f02f2f84ec101915be0f84ef847a1228208989680a15210bc9930018208989680a1019132e28d0a565bdd5c88189a59081a185cc81899595b881bdd5d189a5908189e48185b9bdd1a195c881d5cd95c8ba001c0ff8e1f308d06d05d58dd1a5bdb881a185cc81899595b8818d85b98d95b1b19590ba0de21c200e30f2829003870208018c8cb05f84dcf165004fa0213cb6a12cb1f01cf16c972fb0000025b0294f84ec0008e3d7020f82582105fcc3d14c8cb1fcb3ff852cf165003cf1612cb0021fa02cb00c9718018c8cb05f853cf1670fa02cb6acc82080f424070fb02c98306fb00e30e7ff862db3c203402fadb3cf84e4054f00320c2008e2b70208010c8cb055007cf1622fa0216cb6a15cb1f8bf4d61726b6574706c616365206665658cf16c972fb009134e2f84e4003f00320c2008e2370208010c8cb055004cf1622fa0213cb6a12cb1f8b7526f79616c74798cf16c972fb009131e282080f424070fb02f84e58a101a120c20031220020f848d0fa40d31fd31ffa40d31fd31f3000c08e2270208010c8cb05f852cf165003fa0212cb6acb1f8b650726f6669748cf16c972fb009130e27020f82582105fcc3d14c8cb1fcb3ff84dcf165003cf1612cb008208989680fa02cb00c9718018c8cb05f853cf1670fa02cb6accc98306fb000054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed54000ef850f851a0f87003708e95328103e8f84a5220b9f2f2f86ef86df823f86fdb3ce1f84ef84ca05220b9975f038103e8f2f0e00270db3c01f86df86ef823f86fdb3c3427340054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed5402f2f84ec101915be0f84ef847a1228208989680a15210bc9930018208989680a1019132e28d0a565bdd5c88189a59081a185cc81899595b881bdd5d189a5908189e48185b9bdd1a195c881d5cd95c8ba001c0ff8e1f308d06d05d58dd1a5bdb881a185cc81899595b8818d85b98d95b1b19590ba0de21c200e30f2829003870208018c8cb05f84dcf165004fa0213cb6a12cb1f01cf16c972fb0000025b0054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed54001320840ee6b280006a61200201202d2e001120840ee6b2802a6120001d08300024d7c0dc38167c00807c0060028ba03859b679b679041082aa87f085f0a1f087f0a7f0a5f09df09bf099f097f095f08bf09ff08c1a22261a182224181622221614222014213e211c20fa20d820b620f420d220b1333100caf8416edded44d0d20001f862d20001f864d20001f866fa4001f86dfa0001f86ed31f01f86fd31f01f870fa4001f872d401f868d430f869f849d0d21f01f867fa4001f863fa0001f86afa0001f86bfa0001f86cd31f01f871fa4001f873d31f30f8657ff8610020f848d0fa40d31fd31ffa40d31fd31f300228f230db3c8103eef844c0fff2f2f8007ff864db3c333400caf8416edded44d0d20001f862d20001f864d20001f866fa4001f86dfa0001f86ed31f01f86fd31f01f870fa4001f872d401f868d430f869f849d0d21f01f867fa4001f863fa0001f86afa0001f86bfa0001f86cd31f01f871fa4001f873d31f30f8657ff8610054f849f848f850f84ff846f844f842c8ca00ca00ca00f84dcf16f84efa02cb1fcb1ff852cf16ccccc9ed54",
			data:         "b5ee9c720101030100e0000255400000000031fcf510c00047efbb81020160d28464124271660d1565daad67fa6f984a4f4c116586f59688010200a58014726b0c3ef3b5eb3427ada305c2c80421805f31c7be31fb4e971eb5628357e300000000a000000c900182cec523a039304feb0fd0fbf8df6036f9f5ca825269b47351699c4878be7b08000000280000019200b30080ebe8800b09dcc365bfe106e22da1f96a0f1b272c9797d380bfad4283637f94bad487c30a020c855800087735940000000259001270316eb10f404fd1c575e336fb68e0a8d82a605c7d89a66b7a5a054883ac5758fdd1c8a0",
			account:      "0:6c912c30dc3642d4f4add23c24485312aa351a804fe5294dfca11f83e849d10d",
			method:       GetSaleData,
			wantTypeHint: "GetSaleData_GetgemsAuctionResult",
			want: GetSaleData_GetgemsAuctionResult{
				Magic:            4281667,
				End:              false,
				EndTime:          1677322785,
				Marketplace:      mustToMsgAddress("0:584ee61b2dff0837116d0fcb5078d93964bcbe9c05fd6a141b1bfca5d6a43e18"),
				Nft:              mustToMsgAddress("0:49c0c5bac43d013f4715d78cdbeda382a360a98171f62699ade96815220eb15d"),
				Owner:            mustToMsgAddress("0:047efbb81020160d28464124271660d1565daad67fa6f984a4f4c116586f5968"),
				LastBid:          0,
				LastMember:       tlb.MsgAddress{SumType: "AddrNone"},
				MinStep:          1000000000,
				MarketFeeAddress: mustToMsgAddress("0:a3935861f79daf59a13d6d182e1640210c02f98e3df18fda74b8f5ab141abf18"),
				MpFeeFactor:      5,
				MpFeeBase:        100,
				RoyaltyAddress:   mustToMsgAddress("0:60b3b148e80e4c13fac3f43efe37d80dbe7d72a0949a6d1cd45a67121e2f9ec2"),
				RoyaltyFeeFactor: 10,
				RoyaltyFeeBase:   100,
				MaxBid:           0,
				MinBid:           4400000000,
				CreatedAt:        1677149986,
				LastBidAt:        0,
				IsCanceled:       false,
			},
		},
		{
			name:         "GetPluginList",
			code:         "b5ee9c72010214010002d4000114ff00f4a413f4bcf2c80b01020120020f020148030602e6d001d0d3032171b0925f04e022d749c120925f04e002d31f218210706c7567bd22821064737472bdb0925f05e003fa403020fa4401c8ca07cbffc9d0ed44d0810140d721f404305c810108f40a6fa131b3925f07e005d33fc8258210706c7567ba923830e30d03821064737472ba925f06e30d0405007801fa00f40430f8276f2230500aa121bef2e0508210706c7567831eb17080185004cb0526cf1658fa0219f400cb6917cb1f5260cb3f20c98040fb0006008a5004810108f45930ed44d0810140d720c801cf16f400c9ed540172b08e23821064737472831eb17080185005cb055003cf1623fa0213cb6acb1fcb3fc98040fb00925f03e2020120070e020120080d020158090a003db29dfb513420405035c87d010c00b23281f2fff274006040423d029be84c600201200b0c0019adce76a26840206b90eb85ffc00019af1df6a26840106b90eb858fc00011b8c97ed44d0d70b1f80059bd242b6f6a2684080a06b90fa0218470d4080847a4937d29910ce6903e9ff9837812801b7810148987159f318404f8f28308d71820d31fd31fd31f02f823bbf264ed44d0d31fd31fd3fff404d15143baf2a15151baf2a205f901541064f910f2a3f80024a4c8cb1f5240cb1f5230cbff5210f400c9ed54f80f01d30721c0009f6c519320d74a96d307d402fb00e830e021c001e30021c002e30001c0039130e30d03a4c8cb1f12cb1fcbff10111213006ed207fa00d4d422f90005c8ca0715cbffc9d077748018c8cb05cb0222cf165005fa0214cb6b12ccccc973fb00c84014810108f451f2a7020070810108d718fa00d33fc8542047810108f451f2a782106e6f746570748018c8cb05cb025006cf165004fa0214cb6a12cb1fcb3fc973fb0002006c810108d718fa00d33f305224810108f459f2a782106473747270748018c8cb05cb025005cf165003fa0213cb6acb1f12cb3fc973fb00000af400c9ed54",
			data:         "b5ee9c720101060100a100015100001e8f29a9a3179190b2045703bc50371dd6897707b1791b8c4cbdd775e41b1ab7b3ebc8ae467bc001020581400c020502027303040041be5d7739ed1b853cab49680427bd0c78a375531c7a203092a115f1f9033cb7f6d00041be4d31620ef663745b654fb7bd023166f67fc8097fbfb34a5f6d60eb4480a303900041bf618db178d663998eaf849ac43cde4965aeac444373c92a65a10f10a2e6f406af",
			account:      "0:9a7752cab755c829967b33e7f2692f9bdb81a47415168bb89c10b74ee0defc6b",
			method:       GetPluginList,
			wantTypeHint: "GetPluginListResult",
			want: GetPluginListResult{
				Plugins: []struct {
					Workchain int32
					Address   tlb.Bits256
				}{
					{Workchain: 0, Address: mustToAddress("0:70c6d8bc6b31ccc757c24d621e6f24b2d7562221b9e49532d0878851737a0357").Address},
					{Workchain: 0, Address: mustToAddress("0:4e698b1077b31ba2db2a7dbde8118b37b3fe404bfdfd9a52fb6b075a2405181c").Address},
					{Workchain: 0, Address: mustToAddress("0:4cebb9cf68dc29e55a4b40213de863c51baa98e3d101849508af8fc819e5bfb6").Address},
				},
			},
		},
		{
			name:         "GetPoolData",
			code:         "b5ee9c7201023a010009c2000114ff00f4a413f4bcf2c80b0102016202030202ce0405020120131402012006070065421d749ab02705203aa008e23aa0303f00114a002a45301ba8e1323d74ac0019c5b01d430d020d749ab021270dede02e46c218047f3e09dbc400b434c0fe900c083e9100dc6c23c88c4cccc835d2708fe3c5200835c874c7cc2084139cdd12ee80b6cf2c38c02497c0f8b800f4c7f6cf1584b0002021081f09004f34c1c069b40830bffcb852483042b729be4830bffcb8524830443729b80830bfc870442c3cb852600330db3c5610c00193705711de104c103b4a98db3c085533db3c1f0c12042ce30f5540db3c105c104b103a497810561045103440330a0b0c0d03a257121110d30721c07922c06eb122c06423c077b121b1f2e04020b39e21d15616c000f2bd56152ebdf2bede22c064e30022c077925717e30d11168e1330041115040311140302111302571157115f03e30d0e0f1003341111d33f56165616db3ce30f0b11100b10bf10be10bd10bc10ab2122230028c88101001026cf0113cb0fcb0f01fa0201fa02c90104db3c1202d8810100561652a2f40e6fa120b3951112a41112de56122ebbf2e04182103b9aca0001111b01a120c200f2e042111a8e82db3c93307020e25613c0009401561aa094561aa001e25301a02cbef2e0432ad765755614b603aa00b609b9f2e04401db3c81010012561740bbf443082f2503a45611c0008f2156150410391028011118011111db3c015618a18212540be400be8e845613db3cde8ea3571781010056155292f40e6fa131f2e045c88101001256164099f4435613db3c4f0702e24f1f50770629303002fe5614c0ff56142dbab0b38e9d1114c000f2e07981010056135272f40e6fa1f2e07adb3c30c200f2e07b925714e211148020f00201d11113c079561356118307f40e6fa120b38e1982103b9aca005613d76595800f7aa984e401111801bef2e07b925717e2561695f404d31f3094306df823e25614228307f40e6fa131f2d07c2f11016cf82303c8ca0013cb1f021114018307f443c8f40001111201cb1f02011112010f8307f44311128e830ddb3c913de20c11100c10bf10bc30004a0cc8cb071bcb0f5009fa025007fa0215cc13f400f400cb1fcbffcb07cb1fcb1ff400c9ed540201201516020120191a0109bbf19db3c81f02016217180175af3bed9e2b882f87b6acc183fa0737d0f97042fa02183fc70fc0808029107a3e37d2904f816900698f98112cb781a802378101c8997100d9f32dc01f0109ac8b6d9e403302016e1b1c015dbbd05db3c57105f0f6d7f8e1f228307f47c6fa5208e1002f40431d31f3052106f0250036f02029132e201b3e6303181f0201201d1e0117ae3eed9e0837af8798b759c01f0276aa39db3c5f06509a5f096d7f8ea98101005230f47c6fa5208e9802db3c810100546380f40e6fa1312355206f0450036f02029132e201b3e6135f031f2f0244ab59db3c5f06509a5f098101002359f40e6fa1f2e056db3c8101004430f40e6fa1311f2f0154ed44d0d307d30ffa00fa00d401d0db3c05f404f404d31fd3ffd307d31fd31ff4043010bc10ab109a108920001c810100d701d30fd30ffa00fa0030001e01c0ff71f833d0810100d70358bab001e85b5712571257125712f8008210f96f732452e0ba8eb93b11117009a15380c1019a5088a020c100923727de8e16305305a8812710a9045301bc923020de5188a008a107e25077db3c270a11110a080a925712e22ac0018e198210ee6f454c52d0ba92703bde8210f374484c1dba92723ade913ce22404b85613c2005614c108b0821047657424561501bab182104e73744b561501bab1f2e0465613c001305613c0028f24d3071039102856180201111201db3c5619a18212540be400be8e845614db3cde11104870de5613c003e3005613c0062630272803ba707f8e988101005230f47c6fa5208e8702db3c3013a0029132e201b3e6306d7f8f378101005240f47c6fa5208f2602db3c25c2009f547715a98412a020c100923070de01dea070db3c8101005412015055f443029132e201b3e6145f042f2f25000ec858fa0201fa020172707f218eb0810100542270f47c6fa532218e9c3254411348705266db3c5217ba05a45304be927f36de103847634550de01b322b112e65f0401290268810100d7018101005462a0f40e6fa131f2e0474930185618011112db3c015619a18212540be400be8e845614db3cde1110487012293004d68f2024c103f2e071db3c6c21f9005360bd99343503a44413f823039130e25614db3cde5613c0078eb7f8237f8e2c56148307f47c6fa5208e1c02f40431d31f305230a18208278d00bc9a2011168307f45b301115de9132e201b3e65b5614db3cde821047657424561401ba3430302a03b2810100546550f40e6fa1f2bcdb3ca08212540be4005230a15210bc93306c14e0810100544666f45b30810100544655f45b3001a55124a182103b9aca005250be8f11705006db3c6d80101023102670db3c1023923434e243302f393804e08f3024c201f2e06f24c202f82325a124a63cbcb1f2e070821047657424c8cb1f5220cb3fc9db3c708018804010341023db3cde5613c0048e235616c0ff56162fbab0f2e04982103b9aca0001111901a120c200f2e04a51eea00e1118de5613c005925714e30d82104e73744b561301ba37382b2c04a85611c000f2e04a5616c0ff56162fbab0f2e04bfa0021c200f2e04e29db3c8212540be400561a01a101a15220bbf2e04c51f1a120c100923070de7f2fdb3c6d8010245970db3c561858a15619a18212540be400be2d39382e014e8e173005111605041115040311140302111302571157115f04e30d0f11100f10ef10de10cd10bc31013e707f8e988101005230f47c6fa5208e8702db3ca013a0029132e201b3e630312f011c8e841114db3c925714e20d11130d30000afa00fa00300114706d8010804072a0db3c3804d63e5f050fc0ff51e6ba1eb0f2e04e08c000f2e04f25f2e05082103b9aca001fbef2e05609fa0020db3c82103b9aca005230a18218746a5288005240bef2e0518212540be40001111001a15230bbf2e052535fbef2e0532edb3c5260bef2e0542d6ef2e05571db3c31f9007032333435001cd3ff31d31fd31f31d3ff31d431d100848028f833206e985b8218178411b200e0d0d30731fa00d31fd30fd30fd30f31d30f31d30fd30f305053a8ab075033a8ab075023a8ab0759a8ab075220a9b41fa0b60800268022f83320d0d30701c012f289d31fd31f3058035cdb3cdb3c1110c8cb1f1ccb3f5006cf16c9801871041110041038db3c0e11100e1f103e102d10bc107b50990743133637380022800ff833d0d31f31d31f31d31f31d70b1f011a71f833d0810100d7037f01db3c390048226eb32091719170e203c8cb055006cf165004fa02cb6a039358cc019130e201c901fb00001c74c8cb0212ca07810100cf01c9d0",
			data:         "b5ee9c720101030100a100027b02000170354add0d26be35e94bdaa400990413c2389c00e8b2c6aa6b75f90303814b8ded9842c63f3d5de2e1c98a114a152ecd1b0059041439000020001001020062ab03af32fa8cc1e2b500ec8d450baaea557d7cfd38f2d188cd1f67d1203e4b5d000000015e9103fda0070110d9316ec0000053a01ad88af1f618a860468971d8555c18444ad699fe6dd4feb12ca6cfd6b1da8a7cee06a763193d8fb010",
			account:      "-1:fe355383070df113b861cbc93fa87c44e7334e94db4b3f46490b9b31018c179a",
			method:       GetPoolData,
			wantTypeHint: "GetPoolData_TfResult",
			want: GetPoolData_TfResult{
				State:                    2,
				NominatorsCount:          0x1,
				StakeAmountSent:          937530439658467,
				ValidatorAmount:          1002000000000,
				ValidatorAddress:         tlb.Bits256{0xab, 0x3, 0xaf, 0x32, 0xfa, 0x8c, 0xc1, 0xe2, 0xb5, 0x0, 0xec, 0x8d, 0x45, 0xb, 0xaa, 0xea, 0x55, 0x7d, 0x7c, 0xfd, 0x38, 0xf2, 0xd1, 0x88, 0xcd, 0x1f, 0x67, 0xd1, 0x20, 0x3e, 0x4b, 0x5d},
				ValidatorRewardShare:     0x0,
				MaxNominatorsCount:       0x1,
				MinValidatorStake:        1001000000000,
				MinNominatorStake:        300000000000000,
				Nominators:               tlb.Any(*boc.NewCell()),
				WithdrawRequests:         nil,
				StakeAt:                  0x64104f08,
				SavedValidatorSetHash:    tlb.Bits256{0xe2, 0x70, 0x3, 0xa2, 0xcb, 0x1a, 0xa9, 0xad, 0xd7, 0xe4, 0xc, 0xe, 0x5, 0x2e, 0x37, 0xb6, 0x61, 0xb, 0x18, 0xfc, 0xf5, 0x77, 0x8b, 0x87, 0x26, 0x28, 0x45, 0x28, 0x54, 0xbb, 0x34, 0x6c},
				ValidatorSetChangesCount: 0x1,
				ValidatorSetChangeTime:   0x641050e4,
				StakeHeldFor:             0x8000,
				ConfigProposalVotings:    []struct{}(nil),
			},
		},
		{
			name:         "GetSubscriptionData",
			code:         "b5ee9c7201020f01000262000114ff00f4a413f4bcf2c80b0102012002030201480405036af230db3c5335a127a904f82327a128a90401bc5135a0f823b913b0f29ef800725210be945387f0078e855386db3ca4e2f82302db3c0b0c0d0202cd06070121a0d0c9b67813f488de0411f488de0410130b048fd6d9e05e8698198fd201829846382c74e2f841999e98f9841083239ba395d497803f018b841083ab735bbed9e702984e382d9c74688462f863841083ab735bbed9e70156ba4e09040b0a0a080269f10fd22184093886d9e7c12c1083239ba39384008646582a803678b2801fd010a65b5658f89659fe4b9fd803fc1083239ba396d9e40e0a04f08e8d108c5f0c708210756e6b77db3ce00ad31f308210706c7567831eb15210ba8f48305324a126a904f82326a127a904bef27109fa4430a619f833d078d721d70b3f5260a11bbe8e923036f82370708210737562732759db3c5077de106910581047103645135042db3ce0395f076c2232821064737472ba0a0a0d09011a8e897f821064737472db3ce0300a006821b39982100400000072fb02de70f8276f118010c8cb055005cf1621fa0214f40013cb6912cb1f830602948100a032dec901fb000030ed44d0fa40fa40fa00d31fd31fd31fd31fd31fd307d31f30018021fa443020813a98db3c01a619f833d078d721d70b3fa070f8258210706c7567228018c8cb055007cf165004fa0215cb6a12cb1f13cb3f01fa02cb00c973fb000e0040c8500acf165008cf165006fa0214cb1f12cb1fcb1fcb1fcb1fcb07cb1fc9ed54005801a615f833d020d70b078100d1ba95810088d721ded307218100ddba028100deba12b1f2e047d33f30a8ab0f",
			data:         "b5ee9c720101010100630000c1801e76a85f4da2bc9775193558c75437152faf0f56fb9668e61c3cb49cf1c2097010038059d6dcc7b507ce861a8a752880c1a3dd13da058b30dc2c337a4bc93fe5f7950ee6b280000a082a1880f0f900000a8c188af927d88af927c000002cb160",
			account:      "0:999F1603173A7B6B39D6F6A4BFBA868BD3AF943D20C19122259F1C2357B601D6",
			method:       GetSubscriptionData,
			wantTypeHint: "GetSubscriptionDataResult",
			want: GetSubscriptionDataResult{
				Wallet: struct {
					Workchain uint32
					Address   tlb.Bits256
				}{0, tlb.Bits256(ton.MustParseHash("f3b542fa6d15e4bba8c9aac63aa1b8a97d787ab7dcb34730e1e5a4e78e104b80"))},
				Beneficiary: struct {
					Workchain uint32
					Address   tlb.Bits256
				}{0, tlb.Bits256(ton.MustParseHash("e01675b731ed41f3a186a29d4a203068f744f68162cc370b0cde92f24ff97de5"))},
				Amount:          1000000000,
				Period:          2629800,
				StartTime:       1644413924,
				Timeout:         10800,
				LastPaymentTime: 1647043743,
				LastRequestTime: 1647043743,
				FailedAttempts:  0,
				SubscriptionId:  45765,
			},
		},
		{
			name:         "GetAuctionInfoResult",
			code
			data:         "B5EE9C720101040100900003934DDCCD2DE16B695D7B719A5E427F8512B5BF8B6D7CC3D34CFBFA60C3DE418BFF8016EE9B2BD640A87E30D80D66E357115AE09EFC4AC26195F2C3126D14FA196D99E400000001912E2046010203000300400016616C74616C617669737461005B80073830A45EB2E7A9398350DEF4FD73EF461365E8BE0ADE2F4466D54BDC8A6FE889C8D8B99400000000C89BC27B",
			account:      "0:CCE531B1C8049F02EB2EDED04343A14C3FB34D4A4C902FE1D20FB335659584C6",
			method:       GetAuctionInfo,
			wantTypeHint: "GetAuctionInfoResult",
			want: GetAuctionInfoResult{
				MaxBidAddress:  mustToMsgAddress("0:39C18522F5973D49CC1A86F7A7EB9F7A309B2F45F056F17A2336AA5EE4537F44"),
				MaxBidAmount:   3832306890,
				AuctionEndTime: 1682825533,
			},
		},
		{
			name:      "MaxBidAddress is null - GetAuctionInfo must fail",
			code
			data:      "B5EE9C720101050100CF0002D50DBE6EED7829EE081EE136CC14E53E48744D956C3935E50E757B94E21B2CC60F8016EE9B2BD640A87E30D80D66E357115AE09EFC4AC26195F2C3126D14FA196D99F003431DA941740AF05A1D9511ABE9061CA7B4243CD629FC636472E32097D798D1CC00000000C89720C10102010300C003001A6D6F6E6579696E766573746F720143A01D1A880A10E7B750CB54F82E156999CC9B21073469B9FAD9EE3A29C040A88763700400499FD3801A18ED4A0BA05782D0ECA88D5F4830E53DA121E6B14FE31B23971904BEBCC68E6010",
			account:   "0:A18176E5362656AA567A01470C4DA789E400E6BDEEA7290A51D7BF2C66C591DA",
			method:    GetAuctionInfo,
			wantError: `can not decode outputs`,
		},
		{
			name:         "GetDomainResult",
			code
			data:         "B5EE9C720101050100CF0002D50DBE6EED7829EE081EE136CC14E53E48744D956C3935E50E757B94E21B2CC60F8016EE9B2BD640A87E30D80D66E357115AE09EFC4AC26195F2C3126D14FA196D99F003431DA941740AF05A1D9511ABE9061CA7B4243CD629FC636472E32097D798D1CC00000000C89720C10102010300C003001A6D6F6E6579696E766573746F720143A01D1A880A10E7B750CB54F82E156999CC9B21073469B9FAD9EE3A29C040A88763700400499FD3801A18ED4A0BA05782D0ECA88D5F4830E53DA121E6B14FE31B23971904BEBCC68E6010",
			account:      "0:A18176E5362656AA567A01470C4DA789E400E6BDEEA7290A51D7BF2C66C591DA",
			method:       GetDomain,
			wantTypeHint: "GetDomainResult",
			want: GetDomainResult{
				Domain: "moneyinvestor",
			},
		},
		{
			name:         "GetFullDomainResult",
			code
			data:         "B5EE9C7201020A01000128000201C001020083461C4C37F8B3078D8557438D0CE37E70EC547AFBAB2DF1FFED374EB607CCA38B80101AF146BF2AB4296CF3F5510FFE99AB7F81E876949DD454FCD24FE6E0364E785003438019015BB8EDE7DB9DA5A953521133F8AD2580CF22374D97511787953F0F4AE110B8030405020140060702000809004B00050064800811B476516D80CB4B27C207224D3755538BF195D7818D3B3E155775655324AD7000600168747470733A2F2F6E66742E667261676D656E742E636F6D2F757365726E616D652F796F67616E6577732E6A736F6E001E08796F67616E657773056D650074000013289502F9000322A689B4006B8019015BB8EDE7DB9DA5A953521133F8AD2580CF22374D97511787953F0F4AE110AA2540BE4000A2540BE40000A00001C20001275010",
			account:      "0:542462B50B9698E2265BEAEE3FECE4CBCEC3887270F47547875CC33438DEDD73",
			method:       GetFullDomain,
			wantTypeHint: "GetFullDomainResult",
			want:         "yoganews.t.me",
		},
		{
			name:         "GetLockupData",
			code:         "b5ee9c7201020e0100019a000114ff00f4a413f4bcf2c80b010201200203020148040501ccf28308d71820d31fd31fd31f02f823bbf264ed44d0d31fd31fd3ffd33fd31fd31fd31ffa00d200d15198baf2a151a6baf2a20af9015410b4f910f2a326d74a20c000943036f800e30e03a4c8cb1f12cb1fcbffcb3f12cb1f14cb1f12cb1f01fa02ca00c9ed540c0004d030020120060702012008090201200a0b0017bb39ced44d0d33f31d70bff80011b8c97ed44d0d70b1f80035ba329ed44d0d31fd31fd3ffd33fd31fd31fd31ffa00d200d16c3680081b9846ed44d0d31fd31fd3ffd33fd31fd31fd31ffa00d200d1303535355214a05250b991338e115340a124a9045220a85235a90414a904a1e259a012bc923070de802cac001f2a506d30721c003f2a6d43020d0d30331fa4031fa4030f800f823534ba05210b9912a8e125304a12da90452b0a853ada904a90452b0a1e2535aa012bc923070de20c20029b02270db3c0371db3c13b112b0923070de20c2009372fb029130e201fb000d0d0046f833206e925b70e0d020d7498307b9925b70e0d70bff7f74c8cb02ca07cbffc9d0c705",
			data:         "b5ee9c720101010100460000870000049429a9a316942ccb44a74401e4a8401295ef9e8cfb85b5b06e4550a2d6c619afec34409ae1000000006337830006067b0000278d00000000007071afd498d0000c",
			account:      "-1:121871ca1f8e4c8ab479a12a8dcacc43767fdfb4f0efda0837a9f6ec92076a66",
			method:       GetLockupData,
			wantTypeHint: "GetLockupDataResult",
			want: GetLockupDataResult{
				StartTime:     1664582400,
				TotalDuration: 101088000,
				UnlockPeriod:  2592000,
				CliffDiration: 0,
				TotalAmount:   2000000000000000,
				AllowElector:  -1,
			},
		},
		{
			name:         "GetBalances",
			code:         "b5ee9c7201021e01000261000114ff00f4a413f4bcf2c80b010201200203020148040501f2f28308d71820d31fd31fd31f802403f823bb13f2f2f003802251a9ba1af2f4802351b7ba1bf2f4801f0bf9015410c5f9101af2f4f8005057f823f0065098f823f0062071289320d74a8e8bd30731d4511bdb3c12b001e8309229a0df72fb02069320d74a96d307d402fb00e8d103a4476814154330f004ed541d0202cd0607020120131402012008090201200f100201200a0b002d5ed44d0d31fd31fd3ffd3fff404fa00f404fa00f404d1803f7007434c0c05c6c2497c0f83e900c0871c02497c0f80074c7c87040a497c1383c00d46d3c00608420babe7114ac2f6c2497c338200a208420babe7106ee86bcbd20084ae0840ee6b2802fbcbd01e0c235c62008087e4055040dbe4404bcbd34c7e00a60840dceaa7d04ee84bcbd34c034c7cc0078c3c412040dd78ca00c0d0e00130875d27d2a1be95b0c60000c1039480af00500161037410af0050810575056001010244300f004ed540201201112004548e1e228020f4966fa520933023bb9131e2209835fa00d113a14013926c21e2b3e6308003502323287c5f287c572ffc4f2fffd00007e80bd00007e80bd00326000431448a814c4e0083d039be865be803444e800a44c38b21400fe809004e0083d10c06002012015160015bde9f780188242f847800c02012017180201481b1c002db5187e006d88868a82609e00c6207e00c63f04ede20b30020158191a0017adce76a268699f98eb85ffc00017ac78f6a268698f98eb858fc00011b325fb513435c2c7e00017b1d1be08e0804230fb50f620002801d0d3030178b0925b7fe0fa4031fa403001f001",
			data:         "b5ee9c7201020a010001000003a90000044729a9a316d77096c47f3e12382ae092680469793677f01e43cf99b9fc11a3492544c4801595fbec994fbfa432b9e0b00ec21e80b9c4b18eba9a9a0c41e2725828774b61dba1dcd65005c0dc675cffa50030010203020374c004050013a06775ac9443b9aca00802058b651008090045a0e01d094526ceb1e4e2618dc427ac869e1e8c01e28d772e6950434610cd83272660d002057fbfb006070043bfb333333333333333333333333333333333333333333333333333333333333333400043bf9555555555555555555555555555555555555555555555555555555555555555400015a941728e06ab05f8f118010013a9ba428c3834ef0c1001",
			account:      "-1:121871ca1f8e4c8ab479a12a8dcacc43767fdfb4f0efda0837a9f6ec92076a66",
			method:       GetBalances,
			wantTypeHint: "GetBalancesResult",
			want: GetBalancesResult{
				TonBalance:           0,
				TotalRestrictedValue: 969346000000000,
				TotalLockedValue:     1000000000,
			},
		},
		{
			name:         "GetAssets",
			code:         "b5ee9c7201024a01001180000114ff00f4a413f4bcf2c80b01020162020302012004050201202d2e0201cf06070201201718020120080903f7b81db3cf84ef8416f1101c705f2e1018020d721d33f0101fa40f404d1f8486f22f84d6f2223c2008e4071f8435448165387c88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f4004400820afaf08050058018c8cb0501cf1601fa02806bcf4001cf17c901fb00923330e220c200925f05e30d70206f02f868847162104f7d807434c0fe903e900c7e801c75c87e800c7e800c1cea6d001bc014011be3161be3005be3005be33e187e105bc41c6c3c900835c2c7c820406f2ea4cc3c1e380820842d5ae5662ea4cc3c1f380820841ef765f7aea3a0cc36cf38082084187b950b6eb8c08820841cab2a2aaeb8c0882084188c0896eea4cc3c207821b1c1d1e0201ee0a0b0201200c0d03f7d6d9e40106b90e99f8080ea7d207d006a00e84712f6d176fd906b85819060004a186b0180c7096000cc4080866b8c00ed98f018796082b6b6f16c00fd004712f6d176fd906b85819060004a186b0180c7096000cc4080866b8c00ed98f018796082b6b6f16c00fd0018027a027a02688822881a0811999a036d9e2dc47101101dd4db3cf8416f11f8426f10c705f2e1038020d721d33f0101d30f0101d4d132f84421be915be0f864f84bf849f8426f11f843c8ccccccccf84401cb0ff84601cb0ff84afa02f8476f10fa02f8476f11fa02f8486f10fa02f8486f11fa02c9ed5420fb04d0ed1eed538200a854ed43d88470201200e0f01d936cf234218000380822d413da4b5af0dae31ad627ac26c84e12c2d0efaeb8b3b90b0b65136753e105bc44071c17cb840600835c8601035c87e900c20101c3e10db7220843868db350072c7d400c072cff33d0032561c0060063232c14073c5807e80a01ab3d03d0032407ec0204701ad36cf3e105bc47e109bc431c17cb840e00835c874cfc04074c3c04c4c7e19be12fe127e109bc47e10f2333333333e110072c3fe118072c3fe12be80be11dbc43e80be11dbc47e80be121bc43e80be121bc47e80b27b5520470152f8426f112176c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d001d0fa40d3070101d401d0fa401202fa82080f4240f8276f10f8416f1266a15220b60812a1a182097d7840a1f8476f22f84a54221354201b17db3c5219b98e385f0350565f0570f8434404c88210e1a36cd401cb1f500301cb3fccf400c9f8416f11128018c8cb0501cf1601fa02806acf40f400c901fb00e0345181a05148a00282083d0900a1547718547756481300e8d3008e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d8018e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d843306f0301d102d1f8416f115005c705f8426f105004c70513b001c003b0f2e11001f8c88210b544f4a401cb1f5006cf165004fa0258fa0201fa0201fa0201fa02c872cf418066cf4001cf17c971fb0050426f02f8675141a0f86af8416f138208e4e1c021aa00a0018208a7d8c00173a9b400a0820afaf080a0aa00a05144a171f84329034159c88210aae7925601cb1f500401cb3f12cc01fa0201fa02c91401f8f8416f1141508018c8cb0501cf1601fa02806acf40f400c901fb0022f849f849c870fa025003cf16f828cf1612ccc976c8cb0412ccccc970f8285316820afaf080a1b60910581048460308c88210178d451901cb1f500601cb3f5004fa0258cf1601cf1601fa02f400c9533101f90074c8cb0212ca07cbffc9d0443015009a738018c8cb0558cf1658fa02cb6accf400c901fb00f84bf849f8426f11f843c8ccccccccf84401cb0ff84601cb0ff84afa02f8476f10fa02f8476f11fa02f8486f10fa02f8486f11fa02c9ed54007c71f8431046035056c88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f40058820afaf080018018c8cb0501cf1601fa02806bcf4001cf17c901fb000005ba854801f9ba5263134ed44f86352426f02f862f86401d30f01f866d401f86901d3008e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d8018e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d843306f03316f233202d307d3075981901fe6f02f86cd1f84c6f11f84c6f10c8cb07cb070271c858cf16f8426f22c858cf1613cb0701cf17c976c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d012cf160171c858cf16f8426f22c858cf1613cb0701cf17c976c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d0cf1601cf16c9f86b70f86a70206f02f867701a007a206f02f868f84bf849f8426f11f843c8ccccccccf84401cb0ff84601cb0ff84afa02f8476f10fa02f8476f11fa02f8486f10fa02f8486f11fa02c9ed5402e4db3c8020d721d33f0101fa00fa40fa40303020f849f849c870fa025003cf16f828cf1612ccc976c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d0f8416f1101c705f2e101f8476f22f84a546250a984f84a546260a9845131a15123a1f84a26a1f86a53206f02f86724543324503308471f034c30db3c8020d721d33f0101d4fa00fa40d300fa00f404552003d4d1413006db3c10460504db3c47222403a030db3c8020d721d33f0101d48e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d801fa00fa40d300fa00f404552003d430413007db3c3010365502db3c472324003a208210c015297fba9330f07be082105819fe48ba92f07ae030840ff2f001eec882103aa870a601cb1f5006cf165005fa025003fa0201fa0201fa0201fa02c872cf418066cf4001cf17c971fb0082080f4240f8276f10f8416f1266a15220b60812a1a18208ec82e0a1f84d6f2270f8436d295429840ac88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f40023ab00103741072001a48018c8cb0501cf1601fa02806bcf4001cf17c901fb0020ab00a170f843103640646dc88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f400028018c8cb0501cf1601fa02806bcf4001cf17c901fb00210070f84bf849f8426f11f843c8ccccccccf84401cb0ff84601cb0ff84afa02f8476f10fa02f8476f11fa02f8486f10fa02f8486f11fa02c9ed5400cef8426f112176c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d001d0fa40d30701018e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d801d1f8416f115004c705f8426f105003c70512b001c001b0f2e10801f6f8426f112176c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d001d0fa40d3070101d3008e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d8018e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d843306f032501f6eda2edfb3354765426ed44ed45ed478e6a5b8040f843103540046dc88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f400700371c858cf16f8426f22c858cf1613cb0701cf17c976c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d041308018c8cb0501cf1601fa02806bcf4001cf17c901fb00db3126003601d1f8416f115004c705f8426f105003c70512b001c002b0f2e1090124ed67ed65ed64747fed118aed41edf101f2ff2701fef8456f23f8476f22f84c6f22f84d6f2253d7c70553e7c705b1f2e10582080f4240f8276f10f8416f1266a15220b60812a1a182083d09002a958209ab3f00958209036640e2a0a12cd0d31f0101fa40fa40f404f404d156132ec7059253ba9a3c547c9a102e10ab1089e2f846561501812710a984561521a1051112050450dc2803fc0597303321a012a984e30d23f823b914b052301110b91fb18e4110235f036c933470f84310474763c88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f40040138018c8cb0501cf1601fa02806bcf4001cf17c901fb00db31e03434f8486f225610500bc7059f53e5a117a05174a15095a008060405e30d53546f0233292a001653e5a118a05164a15075a001f0f86750086f02f868f84bf849f8426f11f843c8ccccccccf84401cb0ff84601cb0ff84afa02f8476f10fa02f8476f11fa02f8486f10fa02f8486f11fa02c9ed542d5156105b104e4d1354201f1cc85008cf165006cf165005fa025005fa02c9c882109c610de301cb1f5003cf1601cf165003fa0201fa02cc2b01ecc872cf418066cf4001cf17c971fb00236e8e61365bd0fa40d300fa00f4045520103404d1550270f843108b07106b105b1a144330c8821072aca8aa01cb1f500901cb3f17cc5005cf165003fa0201cf1650235023cb0001fa02f400ccc940138018c8cb0501cf1601fa02806acf40f400c901fb00e30d2c008e30323370f84325d70b01c000913593371046e207045063c88210ad4eb6f501cb1f500501cb3f13cc01fa0201cf16f400028018c8cb0501cf1601fa02806bcf4001cf17c901fb000201202f300201203a3b020148313202012038390111b06cf6cf3e11dbc8a0470273b118b6cf3e115bc8fe11dbc8be131bc8946171c1644d254cc40990c038be1194982049c42a611459a8505100c1c165cc0cc86804aa6138c34060473301fe710192a70ae404710192a70ae4547214231382300de0b6b3a76400005004a98482300de0b6b3a76400005003a9845c82300de0b6b3a7640000a984512082300de0b6b3a7640000a984511082300de0b6b3a7640000a984a082300de0b6b3a7640000a9840482300de0b6b3a764000026a9841382300de0b6b3a7640000500634016ea9840182300de0b6b3a764000023a9845044a05410238e8feda2edfb7094208407b98ae8135f03d812a10182300de0b6b3a7640000a9843502f4547131530082300de0b6b3a7640000a9842182300de0b6b3a7640000a984522082300de0b6b3a7640000a984532282300de0b6b3a7640000a984500382300de0b6b3a7640000a9840182300de0b6b3a7640000a984a05304b9e30f5302bc9c5203a1c10295135f03db31e09c5122a1c10295135f03db31e0e2a4363700985240a182300de0b6b3a7640000536421a703511082300de0b6b3a7640000a98482300de0b6b3a7640000a984531182300de0b6b3a7640000a9845882300de0b6b3a7640000a984a0a98413a0009624a182300de0b6b3a7640000536421a703511082300de0b6b3a7640000a98482300de0b6b3a7640000a984531182300de0b6b3a7640000a9845882300de0b6b3a7640000a984a0a98413a1010db4321b679f0890470113b7419b679f08d024e210470201203c3d02014845460201583e3f0111b7131b679f090de45047020120404102037b204243015cab79db3cf849f849c870fa025003cf16f828cf1612ccc976c8cb0412ccccc97001f90074c8cb0212ca07cbffc9d0470112a92bdb3cf8456f235b4702f9b5bb678dae191960f17888ca88eae6e85aec645a98a119e2d9305e10546a6ffe1b79cfdd86bad3db874313dcde2fb05e6a74aa7f3552d9617c79d12b1060fe82ee191960f1627319e2d9305e1dd01fa5e3c06901c45046c6b2ddcea5af764fea0eed72a10d404f2312ceb247cb1060fe82ee191960f16498a119e2d9304744010fb03b679f098de45047007482f0b76a7ca153c24671658335bbd08946350ffc621fa1c516e7123095d4ffd5c581588307f417f84a7f8b0270c8cb0714f400c9f849103410230115b36b36cf3e115bc8db04a0470221b11176cf3e11dbc8be12905100f6cf0c20474801f6ed44d0d421d0fa40d307010131d3008e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d8018e25eda2edfb20d70b0320c0009430d603018e12c0019881010cd71801db31e030f2c1056d6de2d843306f0331f86502f863d4596f02f862d401f869d421d0d307d30749007224c0008e106c22328103e8820182b85323b609b6098e1f547032a9845220b608543234a984b608546425a984546444a98412b6084130e243000072596f02f86cfa40fa40596f02f86dfa4001f86ed101f86bd30f01f864d30f01f866fa0001f86afa00fa00596f02f867fa00fa00596f02f868d1",
			data:         "b5ee9c72010219010004aa0004530004006480d4a1152306e217461b3f17a2ae33805f273f8e95727eb6037fa90dce8b7742e0eee7005c78010203040089800be0ac9f6bec08f07b6ae0639c39ecd1511a9a9adb4dbc9b6445697241adfb00004010065de083a0007638233b6668354e50e44cd4225f1730d66b8b1f19e5d2669075180114ff00f4a413f4bcf2c80b050114ff00f4a413f4bcf2c80b0800cd0000801b5c2a74e9b12977864e903319ac4dc9ebbe94d35a5f4ad9d01f84c896ae11a41003b8f245f96d539ce8bf34ef82a063fd6e4cded142537897ebb1089a326e77ec3a002f82b27dafb023c1edab818e70e7b345446a6a6b6d36f26d9115a5c906b7ec0040020270060700f5de03a0e9ae43f4806041da89da8bda8f1c32b7020140e0b1002191960a039e2c03f40500d79e819203f601dacfdacbdac8e2ffda231c7bda89a1f481a60ea2658e0be5c207081e09a63e030421367547f5742be5e807a67e0261a9a61e0203a843f60843a1da3ddaa6208c208b0401ca4dda87b1da83dbe203e5ff0009bf2932f83c020162090a0202cc0b0c001ba0f605da89a1f401f481f481a8610201d40d0e0201480f1000c30831c02497c138007434c0c05c6c2544d7c0fc02f83e903e900c7e800c5c75c87e800c7e800c1cea6d0000b4c7e08403e29fa954882ea54c4d167c0238208405e3514654882ea58c511100fc02780d60841657c1ef2ea4d67c02b817c12103fcbc2000113e910c1c2ebcb853600201201112020120171801f100f4cffe803e90087c007b51343e803e903e90350c144da8548ab1c17cb8b04a30bffcb8b0950d109c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c032483e401c1d3232c0b281f2fff274013e903d010c7e800835d270803cb8b11de0063232c1540233c59c3e8085f2dac4f3201303f73b51343e803e903e90350c0234cffe80145468017e903e9014d6f1c1551cdb5c150804d50500f214013e809633c58073c5b33248b232c044bd003d0032c0327e401c1d3232c0b281f2fff274140371c1472c7cb8b0c2be80146a2860822625a020822625a004ad8228608239387028062849f8c3c975c2c070c008e014151600ae8210178d4519c8cb1f19cb3f5007fa0222cf165006cf1625fa025003cf16c95005cc2391729171e25008a813a08208e4e1c0aa008208989680a0a014bcf2e2c504c98040fb001023c85004fa0258cf1601cf16ccc9ed5400705279a018a182107362d09cc8cb1f5230cb3f58fa025007cf165007cf16c9718010c8cb0524cf165006fa0215cb6a14ccc971fb0010241023000e10491038375f040076c200b08e218210d53276db708010c8cb055008cf165004fa0216cb6a12cb1f12cb3fc972fb0093356c21e203c85004fa0258cf1601cf16ccc9ed5400db3b51343e803e903e90350c01f4cffe803e900c145468549271c17cb8b049f0bffcb8b0a0823938702a8005a805af3cb8b0e0841ef765f7b232c7c572cfd400fe8088b3c58073c5b25c60063232c14933c59c3e80b2dab33260103ec01004f214013e809633c58073c5b3327b55200083200835c87b51343e803e903e90350c0134c7e08405e3514654882ea0841ef765f784ee84ac7cb8b174cfcc7e800c04e81408f214013e809633c58073c5b3327b5520",
			account:      "0:823d0ad8a54f392f6deaf516847f39179f86ee79fbe6f4a036321a6303c99581",
			method:       GetAssets,
			wantTypeHint: "GetAssets_DedustResult",
			want: GetAssets_DedustResult{
				Asset0: DedustAsset{
					SumType: "Native",
				},
				Asset1: DedustAsset{
					SumType: "Jetton",
					Jetton: struct {
						WorkchainId int8
						Address     tlb.Bits256
					}{
						WorkchainId: 0,
						Address:     mustToMsgAddress("0:65de083a0007638233b6668354e50e44cd4225f1730d66b8b1f19e5d26690751").AddrStd.Address},
				},
			},
		},
		{
			name:         "GetValidatorControllerData",
			code:         "b5ee9c72010232010009fe000114ff00f4a413f4bcf2c80b0102016202030202ca0e0f0201200405020120060702012008090243b8408db3cf8276f105320a0db3c5aa9b417f84f13a1821809c765240058a058a001810290109b8916db3c8290201200a0b02cdbbd35eda2edfbdb3cf841c000917fe1f8276f10821809502f900001821077359400a101a182103d648d80a12082202d79883d2000b992307fe0f84f8ea8800ff833d0d31f31d31fd31fd70b1f0132f86edb3c30f85058bc01f82303a112b9b094307fdb31e0de8102f0141b6681b679f083f085f091f093f095f097f099f09bf09df09ff0a1f0a9f0abf0870100201620c0d0030aa1d829035d676f6ac6e35e755ea3c4d7d7cf577627b1cf00138ab05800ff833d0d31f31d31fd31fd70b1f0131db3c30315203a159a12f04f7d407434c0fe900c36cf005c6c23db4cc835d2708fe3b7e00835c874c7c04c482084139cdd12ee88f6cf2c27d7c0fe107000a4dc3e1864dffe18b8a38e3e1544f1c1638b88608437f7289eeea6cc7e13c0683e1bfe08fe1c2385cc20843990b2596ea77e10700064dc3e1864dffe18b8b7b8a456f8b8a497c0f8b6cf2101230110103aca03100e0ed44d0d30701f861d20001f862d20001f868fa0001f869d32f01f86ad3ff01f86bd30701f86cd32f01f86dd32f01f86efa0001f86fd32f01f870fa4001f863d32f01f864d31701f87120f872d430d0d31f01f873fa4001f874fa4001f875fa4001f865d430d0fa4001f876fa4030f8670476e001d31fd33f5923db3c8ead218210d372158cba8e215f05f841c0058e168212cb417800f84fa082100ee6b280a0bc9370f861de9130e2e30ee30d121314150108db3cc7052b03ba2182101690c604ba8f512182107b4b42e6ba8e1310355f05f856018200928302c705f2f47ff8688f31218210e8a0abfeba8e1310355f05f856018200928302c705f2f470f8688f11218210270695fbba8e855b6c22db3ce30ee2e2e30d16171802f46c2232f800208210f96f7324ba8ec370f861f84f8eb8821077359400f84fa013be8ea5f855f84fc88210dfdca27b580402cb1fcb3fc912801871db3c70f86f70f87070f86970f86a943075f861e2926c21e28e1d6c21208210fffffffeba8e10f841c004967ff86275f861937ff862e2dee2f841c0029130e30d2d2e0104db3c300048f84312018200928302c705f2f48200a000f823f84482015180a0bcf2f4d307d43001fb00034821821079e7c016ba8e855b6c22db3c8f122182107247e7a5ba8e8610355f05db3ce30ee2191a1b00865b33f855018200928302c705f2f4f85094f823f870df01fa00f84f22a0f86fd18200fa05f8518317a013a9b41782103b9aca00a0b9f2f470f871f841c0019370f861de002cf84512018200928302c705f2f4f823f864fa4030f863001ef845018200928302c705f2f470f86203ec21821055c26cd5ba8ed7345b7582009284f84158baf2f4f845018200928302c705f2f401821077359400a182100ee6b280a1f84fb608f855c88210dfdca27b580402cb1fcb3fc9542220801871db3cf84f01a1f86ff84fc0009670f87070f861de8f12218210139a1b4eba8e8610355f05db3ce30ee22d1c1d001ef847018200928302c705f2f47ff862033c82009285f842f2f2218210eb373a05ba8f0a218210f0fd2250bae30fe30d1e1f2003dc5b327382009284f84158baf2f401d18200f700f84cc103f2f4db3c31f9008200f701f84b22bdf2f4f86bf84ca4f86cf823f86d800ff833d0d31f31d31fd31fd70b1f013031f84e01b609f86ef82301a1810258b9f84fc000b18e9131f8545210018200928302c705f2f4db3ce30e2f282103ca2182108efed779ba8ece3133337082009284f84158baf2f48200f800f84ff2f2f854018200928302c705f2f401fa00d18200f80121c200f2f482107735940072fb02f854c8821030026327580402cb1fcb3fc9801070db3c8f0a2182104e73744bbae30fe22d222303e4317382009284f84158baf2f401d18200f600f84cc201f2f4f823f84da1f84ea18200f601f84cc20222c23cb1f2f48200f6022482103d648d80bef2f4c8821047657424580302cb1fcb3fc9db3c705880188040db3c74f861810258b9f84fc000b19e6c21f854018200928302c705f2f4e30e2b2d2c0156018212540be400a1821077359400be8e97f8545210c70591308e8c8212540be4006d801072db3ce29130e22d03f4317082009284f84158baf2f4f85413018200928302c705f2f48200f90022f2f48200f9010382103d648d80be13f2f401fa0020db3cf86a2182103d648d80a1f8698200f9022282202d79883d2000bef2f4821809c76524008200f9035353a122bef2f4800ff833d0d31f31d31fd31fd70b1f0132f86edb3cf84f242f2503b02182106335b11aba8f4c34318210ed7378a6ba8f397082009284f84158baf2f48200fb00f84ff2f4db3c5b8200fb01f8505220bcf2f4f82301a1821077359400f84fa05240be955f0475f861e30d965f03840ff2f0e2e30d2f26270026d3ff31d31f01f86ad31f31d3ff31d431d1f84a03a88e148200f904f85024bc03f82306a115b912b013f2f4923330e2f84f17a158a18200f905f849db3c12bef2f472f861f900f86b70f86c03f86ddb3cc882104e73744b580402cb1fcb3f5003cf16c912801871db3c292b2d03d2f855f84fc88210dfdca27b580602cb1fcb3fc94140801871db3c70f86f70f87001810258b98e9131f8545210018200928302c705f2f4db3c8eae821077359400f84fa08212540be400a012be8e97f8545210c70591308e8c8212540be4006d801072db3ce29130e2e22d282d03fc317082009284f84158baf2f4f85413018200928302c705f2f48200f6040382103b9aca00be13f2f421fa0031fa00d3170101d120f8718200fa00f848f2f48200fa01f84ff2f2800ff833d0d31f31d31fd31fd70b1f0131db3c30318200fa0221f82305a114bc13f2f48200fa0302f82302a1b9f2f45314a0db3c59a9b4172f292a0110706d80108042db3c2d00848028f833206e985b8218178411b200e0d0d30731fa00d31fd30fd30fd30f31d30f31d30fd30f305053a8ab075033a8ab075023a8ab0759a8ab075220a9b41fa0b608017af84f15a18200fa04821809c76524005003a05005a014be13f2f4c88210e642c965580302cb1fcb3f01cf16f852cf16c9f855705880188040db3c71f8612d001671f833d0d70bff7f01f032015859a18212540be400a1821077359400be8e97f8545210c70591308e8c8212540be4006d801072db3ce29130e22d0046226eb3c8500301cb055005cf165003fa0202957158cb6acc95307001cb6ae2c901fb000152208210ee6f454cba943070f8618e998210f374484cba8e8b73f861db3c6c21f900f86b937ff862e2e22f00268022f83320d0d30701c012f289d31fd31f30580090f84cf84bf841c8cb07f84201ca00f84801ca00f849fa02f84a01cb2fcbffcb07f84d01cb2ff84e01cb2ff84ffa02f85001cb2ff843cf16f84401cb2ff85101cb17f852cf16c9ed54001874c8cb025801ca07cbffc9d0",
			data:         "b5ee9c72010203010001070001a5035c06924342238114000194793c202e0b3215304f6a35a4e351eb4807d2a94f6ae056ae5e522e3b6e58c37851ae20080001947d3fd0000000020001c066dd838e24a80000194774dcc00000000000000000080101d1000000009fef92fbb419b430d58a9894c641b571c8be0236ce4cab48e66e375f30fad76a123002916c5fca10248a6de0d838ca41083c4f93f883e435f8afe312b19c0c96788bea004493230238b92a02599a423d9af26e70ff08bf68245f1e6313e2bfc57e94622640020085801828c8392b8937d23ca78d0868ca0b40108579448b2bb5616d3619b098252b3d1002ce8bb0922c22eefb1db577f26b5a7fc6747009655af89d6b3bb6c11ec785d7de",
			account:      "-1:5b75159d13097b1d16dea1481bcded59070f922d7925ef87fcae83e2c19b57e8",
			method:       GetValidatorControllerData,
			wantTypeHint: "GetValidatorControllerDataResult",
			want: GetValidatorControllerDataResult{
				State:                    3,
				Halted:                   false,
				Approved:                 true,
				StakeAmountSent:          462416857587781,
				StakeAt:                  1696485128,
				SavedValidatorSetHash:    mustToBits256("0b82cc854c13da8d6938d47ad201f4aa53dab815ab97948b8edb9630de146b88"),
				ValidatorSetChangesCount: 2,
				ValidatorSetChangeTime:   1696550900,
				StakeHeldFor:             32768,
				BorrowedAmount:           452406323745440,
				BorrowingTime:            1696453491,
				Validator:                mustToMsgAddress("-1:7c97dda0cda186ac54c4a6320dab8e45f011b672655a473371baf987d6bb5091"),
				Pool:                     mustToMsgAddress("0:a45b17f28409229b78360e3290420f13e4fe20f90d7e2bf8c4ac6703259e22fa"),
				Sudoer:                   tlb.MsgAddress{SumType: "AddrNone"},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			mainnetConfig, _ := boc.DeserializeBocBase64(mainnetConfig)
			code, err := hex.DecodeString(tt.code)
			if err != nil {
				t.Fatalf("DecodeString() failed: %v", err)
			}
			data, err := hex.DecodeString(tt.data)
			if err != nil {
				t.Fatalf("DecodeString() failed: %v", err)
			}
			accountID, err := ton.AccountIDFromRaw(tt.account)
			if err != nil {
				t.Fatalf("AccountIDFromRaw() failed: %v", err)
			}
			codeCell, _ := boc.DeserializeBoc(code)
			dataCell, _ := boc.DeserializeBoc(data)
			emulator, err := tvm.NewEmulator(codeCell[0], dataCell[0], mainnetConfig[0], tvm.WithVerbosityLevel(-1), tvm.WithLazyC7Optimization())
			typeHint, got, err := tt.method(context.Background(), emulator, accountID)
			if len(tt.wantError) > 0 {
				if err == nil {
					t.Fatalf("expected err but got nil")
				}
				if tt.wantError != err.Error() {
					t.Fatalf("want: %v, got: %v", tt.wantError, err.Error())
				}
				return
			}
			if err != nil {
				t.Fatalf("method invocation failed: %v", err)
			}
			switch x := got.(type) {
			case GetFullDomainResult:
				got = x.EscapedDomain()
			case GetPoolData_TfResult:
				// comparing two cells don't work well with reflect.DeepEqual()
				// because of the internal fields like refCursor
				x.Nominators = tlb.Any(*boc.NewCell())
				got = x
			case GetAssets_DedustResult:
				addr := ton.AccountID{
					Workchain: 0,
					Address:   x.Asset1.Jetton.Address,
				}
				fmt.Printf("%v\n", addr.ToRaw())

			}
			if !reflect.DeepEqual(tt.want, got) {
				t.Fatalf("want: %v, got: %v", tt.want, got)
			}
			if !reflect.DeepEqual(tt.wantTypeHint, typeHint) {
				t.Fatalf("want: %v, got: %v", tt.wantTypeHint, typeHint)
			}
		})
	}
}

func TestWhalesNominators(t *testing.T) {
	address := ton.MustParseAccountID("EQBI-wGVp_x0VFEjd7m9cEUD3tJ_bnxMSp0Tb9qz757ATEAM")
	client, err := liteapi.NewClient(liteapi.Mainnet(), liteapi.FromEnvs())
	if err != nil {
		t.Fatal(err)
	}
	_, v, err := GetMembersRaw(context.Background(), client, address)
	if err != nil {
		t.Fatal(err)
	}
	members := v.(GetMembersRaw_WhalesNominatorResult).Members
	if len(members.List.Keys()) == 0 {
		t.Fatal(len(members.List.Keys()))
	}
	memberAddress := ton.NewAccountID(0, members.List.Keys()[2])
	_, v, err = GetMember(context.Background(), client, address, memberAddress.ToMsgAddress())
	if err != nil {
		t.Fatal(err)
	}
	if v.(GetMember_WhalesNominatorResult).MemberBalance == 0 {
		t.Fatal("zero balance")
	}
	_, v, err = GetPoolStatus(context.Background(), client, address)
	if err != nil {
		t.Fatal(err)
	}
	status := v.(GetPoolStatusResult)
	fmt.Printf("%+v\n", status)

	_, v, err = GetParams(context.Background(), client, address)
	if err != nil {
		t.Fatal(err)
	}
	params := v.(GetParams_WhalesNominatorResult)
	fmt.Printf("%+v\n", params)

}
func mustAccountIDToMsgAddress(account string) tlb.MsgAddress {
	accountID := ton.MustParseAccountID(account)
	return accountID.ToMsgAddress()
}

func TestMessageDecoder(t *testing.T) {
	tests := []struct {
		name         string
		boc          string
		wantOpName   MsgOpName
		wantValue    any
		wantValidate func(t *testing.T, value any)
	}{
		{
			name:       "jetton burn notification",
			boc:        "te6ccgEBAQEASAAAi3vdl952mKNkA9fVjzGM4ygA2ZpktQsYby0n9cV5VWOFINBjScIU2HdondFsK3lDpEB64AEuSPMwX2JvQ+QTUtfXxYKTyMA=",
			wantOpName: JettonBurnNotificationMsgOp,
			wantValue: JettonBurnNotificationMsgBody{
				QueryId:             8545759942892049807,
				Amount:              tlb.VarUInteger16(*big.NewInt(1625650)),
				Sender:              mustAccountIDToMsgAddress("0:6ccd325a858c379693fae2bcaab1c2906831a4e10a6c3bb44ee8b615bca1d220"),
				ResponseDestination: tlb.MsgAddress{SumType: "AddrNone"},
			},
		},
		{
			name:       "telemint deploy",
			boc:        "te6ccgEBBAEA7AADs0Y3KJoZbSToF2FWrsk5n2kJkqyX4X6Ap8VP92juX4NPlNJSZUBwdJYp6pn3SVlg0xt+7QjJLdBJYx7JVdtEr9ZqVVgPAAAAA2QEUxhkBFOuCHpoZW5nc2h1wAECAwBgAWh0dHBzOi8vbmZ0LmZyYWdtZW50LmNvbS91c2VybmFtZS96aGVuZ3NodS5qc29uAGGACBG0dlFtgMtLJ8IHIk03VVOL8ZXXgY07PhVXdWVTJK1qMG3EIAAAoAABwgABJ1AQAEsABQBkgAgRtHZRbYDLSyfCByJNN1VTi/GV14GNOz4VV3VlUyStcA==",
			wantOpName: TelemintDeployMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(TelemintDeployMsgBody)
				if body.Msg.Username != "zhengshu" {
					t.Errorf("got: %v, want: %v", body.Msg.Username, "zhengshu")
				}
			},
		},
		{
			name:       "elector new stake",
			boc:        "te6ccgEBAgEAmQABqE5zdEsAAAGIsvJfe+aMZUshdNyzRr18l+R6zoT5JTFV0wvEY5pVettDt6WoZIhPCAADAAByqS8vzZ9J5LBRsipw1exZ37mcctWGpeeSq/Qpa7CGrQEAgEyUVHocPTT7h/s+//UOfy6LEW8mW1R1pQ35orfivNAb7e5qfpcym6AuhR1D3+bFzQSVm8wlLSxDlfBH+7ceNAw=",
			wantOpName: ElectorNewStakeMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(ElectorNewStakeMsgBody)
				if body.QueryId != 1686629408635 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "elector new stake confirmation",
			boc:        "te6ccgEBAQEAEgAAIPN0SEwAAAGIsvJfewAAAAA=",
			wantOpName: ElectorNewStakeConfirmationMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(ElectorNewStakeConfirmationMsgBody)
				if body.QueryId != 1686629408635 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "elector recover stake request",
			boc:        "te6ccgEBAQEADgAAGEdldCQAAAAAAAAAAA==",
			wantOpName: ElectorRecoverStakeRequestMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(ElectorRecoverStakeRequestMsgBody)
				fmt.Printf("body = %v\n", body)
				if body.QueryId != 0 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "elector recover stake response",
			boc:        "te6ccgEBAQEADgAAGPlvcyQAAAAAAAAAAA==",
			wantOpName: ElectorRecoverStakeResponseMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(ElectorRecoverStakeResponseMsgBody)
				if body.QueryId != 0 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - send stake",
			boc:        "te6ccgEBAgEAowABvKIGXywAAAGI0j1Mgyw1BwFYnPUnKHbwWM4TRS5hbZhmsJpGbOJDg75wT5qMaoGMU5UBzzKSWmSQTwgAAwAAbNIn+VFPb/l4sANmljVkghl6ljI2ocx/jenSYm1bcPkBAIDB/wSVjt2bFSbZPDK61sYORwjzGoahODL638cmc32s8x/EiJ461gEckV2LexXz3os8VVSv5KE6VByuNNCMwIgH",
			wantOpName: WhalesNominatorsSendStakeMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsSendStakeMsgBody)
				if body.QueryId != 1687154412675 {
					t.Fatalf("queryId mismatch")
				}
				if body.GasLimit != 50000 {
					t.Fatalf("gas limit mismatch")
				}
				if body.Stake != 378906127837302 {
					t.Fatalf("stake mismatch")
				}

			},
		},
		{
			name:       "whales nominators - withdraw unowned",
			boc:        "te6ccgEBAQEAEgAAHyUdapgAAAGI0kAuMDAYagg=",
			wantOpName: WhalesNominatorsWithdrawUnownedMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsWithdrawUnownedMsgBody)
				if body.QueryId != 1687154601520 {
					t.Fatalf("queryId mismatch")
				}
				if body.GasLimit != 100_000 {
					t.Fatalf("gas limit mismatch")
				}
			},
		},
		{
			name:       "whales nominators - withdraw unowned response",
			boc:        "te6ccgEBAQEADgAAGB0XFb8AAAGI0kAuMA==",
			wantOpName: WhalesNominatorsWithdrawUnownedResponseMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsWithdrawUnownedResponseMsgBody)
				if body.QueryId != 1687154601520 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - accept stakes",
			boc:        "te6ccgEBCAEAsgABH5moEfsAAAGI0cbxIjD0JAwBAgEgAgMCASAEBQIBIAYHAEO/scWCjvQfTFQL1KOh6Ztr+nmQ2C/4kaXNiOi32wpy6CDAAEO/p3S5+e23IvfQ+gvnzqIOTbeuaCgp9yPokv68ZDfOGiPAAEO/oelM0QVfYQ+xunGB33oFiH1+YQOoEJASlZe2kARO5xnAAEO/mysRUYDIEknvXY8sMQx76uL+6/7Q/rgIdqBtazx2oQHA",
			wantOpName: WhalesNominatorsAcceptStakeMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsAcceptStakeMsgBody)
				if body.QueryId != 1687146656034 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - accept stakes",
			boc:        "te6ccgEBBgEAhwABH6Gf2TQAAAGI0ceOyDD0JAwBAgEgAgMAQ7/UdemOy3akYORpWtha5F6O8CndmRarogLAwRuWQp6MVGACAW4EBQBBvw73+YMCAelmRbwV6nBjD2g+GRAa76aw/T3TTJUWAbKDAEG/GEVIP5Hp4hjND4ZSFia4OPv/sH91W1DMG7JUq2bkLS8=",
			wantOpName: WhalesNominatorsAcceptWithdrawsMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsAcceptWithdrawsMsgBody)
				if body.QueryId != 1687146696392 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - stake withdraw completed",
			boc:        "te6ccgEBAQEADgAAGCPUIeEAARfZiCji9A==",
			wantOpName: WhalesNominatorsStakeWithdrawCompletedMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsStakeWithdrawCompletedMsgBody)
				fmt.Printf("%v\n", body.QueryId)
				if body.QueryId != 307698036433652 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - stake withdraw completed",
			boc:        "te6ccgEBAQEADgAAGCPUIeEAARfZiCji9A==",
			wantOpName: WhalesNominatorsStakeWithdrawCompletedMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsStakeWithdrawCompletedMsgBody)
				if body.QueryId != 307698036433652 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - stake withdraw delayed",
			boc:        "te6ccgEBAQEADgAAGHS7NCcAEdbPGIwy+g==",
			wantOpName: WhalesNominatorsStakeWithdrawDelayedMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsStakeWithdrawDelayedMsgBody)
				if body.QueryId != 5021259562496762 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "whales nominators - force kick",
			boc:        "te6ccgEBAQEAEgAAHxWWkgwAAAGI/qz9HDAYagg=",
			wantOpName: WhalesNominatorsForceKickMsgOp,
			wantValidate: func(t *testing.T, value any) {
				body := value.(WhalesNominatorsForceKickMsgBody)
				if body.QueryId != 1687899929884 {
					t.Fatalf("queryId mismatch")
				}
			},
		},
		{
			name:       "telemint deploy v2",
			boc:        "te6ccgECBQEAARoABLlGNyibSnKFbLb9BariGutjeV1NX9pHFDBdJPTjQZwnkrbuozQ9z1dFSxwdSrucHKIgUN1S1cXZDhAIW5amasPH68RHDwAAAAxjj9foY4/Yfgs4ODgwNjA2NDU5MeABAgMEAGIBaHR0cHM6Ly9uZnQuZnJhZ21lbnQuY29tL251bWJlci84ODgwNjA2NDU5MS5qc29uAGuACBG0dlFtgMtLJ8IHIk03VVOL8ZXXgY07PhVXdWVTJK1qBDDiNACgQw4jQACgAAHCAAEnUBAASwAFAGSACBG0dlFtgMtLJ8IHIk03VVOL8ZXXgY07PhVXdWVTJK1wAEPADUaB/hrwxMFm1o8HL3BxGPth8cNxJn5ZMJcJdz8Xe3UE",
			wantOpName: TelemintDeployV2MsgOp,
			wantValidate: func(t *testing.T, value any) {
				got := value.(TelemintDeployV2MsgBody)
				senderAddr := mustToMsgAddress("0:d4681fe1af0c4c166d68f072f707118fb61f1c371267e59309709773f177b750")
				content := got.Msg.Content
				got.Msg.Content = tlb.Any{}
				expected := TelemintDeployV2MsgBody{
					Sig: mustToBits512("4a72856cb6fd05aae21aeb63795d4d5fda4714305d24f4e3419c2792b6eea3343dcf57454b1c1d4abb9c1ca22050dd52d5c5d90e10085b96a66ac3c7ebc4470f"),
					Msg: TelemintUnsignedDeployV2{
						SubwalletId: 12,
						ValidSince:  1670371304,
						ValidTill:   1670371454,
						TokenName:   "88806064591",
						Content:     tlb.Any{},
						AuctionConfig: TeleitemAuctionConfig{
							BeneficiarAddress: mustToMsgAddress("0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b"),
							InitialMinBid:     9000000000,
							MaxBid:            9000000000,
							MinBidStep:        5,
							MinExtendTime:     3600,
							Duration:          604800,
						},
						RoyaltyParams: &NftRoyaltyParams{
							Numerator:   5,
							Denominator: 100,
							Destination: mustToMsgAddress("0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b"),
						},
						Restrictions: &TelemintRestrictions{
							ForceSenderAddress:   &senderAddr,
							RewriteSenderAddress: nil,
						},
					},
				}
				if !reflect.DeepEqual(got, expected) {
					t.Fatalf("got different result")
				}
				cell := boc.Cell(content)
				if mustToBoc(&cell) != "b5ee9c720101010100330000620168747470733a2f2f6e66742e667261676d656e742e636f6d2f6e756d6265722f38383830363036343539312e6a736f6e" {
					t.Fatalf("got different result")
				}
			},
		},
		{
			name: "teleitem deploy",
			boc:  "b5ee9c720101050100c9000457299a3e15801b19b333f65636709cd944a9871066ebc46223516f1802b710c50d8637e23c53ac0cbba106e00101020304001604616c736f056d6500740000580168747470733a2f2f6e66742e667261676d656e742e636f6d2f757365726e616d652f616c736f2e6a736f6e0063800811b476516d80cb4b27c207224d3755538bf195d7818d3b3e155775655324ad6c092f96e9880000a00001c20001275010004b00050064800811b476516d80cb4b27c207224d3755538bf195d7818d3b3e155775655324ad70",
			//msg:
			//  subwallet_id: 3
			//  valid_since: 1695343237
			//  valid_till: 1695343387
			//  username: also
			//  content: b5ee9c7201010101002e0000580168747470733a2f2f6e66742e667261676d656e742e636f6d2f757365726e616d652f616c736f2e6a736f6e
			//  auction_config:
			//    beneficiar_address: 0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b
			//    initial_min_bid: "5050000000000"
			//    max_bid: "0"
			//    min_bid_step: 5
			//    min_extend_time: 3600
			//    duration: 604800
			//  royalty_params:
			//    numerator: 5
			//    denominator: 100
			//    destination: 0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b
			wantOpName: TeleitemDeployMsgOp,
			wantValidate: func(t *testing.T, value any) {
				got := value.(TeleitemDeployMsgBody)
				got.NftContent = tlb.Any{}
				expected := TeleitemDeployMsgBody{
					SenderAddress: mustToMsgAddress("0:d8cd999fb2b1b384e6ca254c3883375e23111a8b78c015b886286c31bf11e29d\""),
					Bid:           7000000000000,
					TokenInfo: TelemintTokenInfo{
						Name:   "also",
						Domain: "me\u0000t\u0000",
					},
					AuctionConfig: TeleitemAuctionConfig{
						BeneficiarAddress: mustToMsgAddress("0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b"),
						InitialMinBid:     5050000000000,
						MaxBid:            0,
						MinBidStep:        5,
						MinExtendTime:     3600,
						Duration:          604800,
					},
					RoyaltyParams: NftRoyaltyParams{
						Numerator:   5,
						Denominator: 100,
						Destination: mustToMsgAddress("0:408da3b28b6c065a593e10391269baaa9c5f8caebc0c69d9f0aabbab2a99256b"),
					},
				}
				if !reflect.DeepEqual(got, expected) {
					t.Fatalf("got different result")
				}
			},
		},

		{
			name:       "stonfi - add liquidity msg",
			boc:        "te6ccgEBAgEAaQABcQ+KfqUAG7D3vuOIZGBOjTVqXIgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQOAdDAwEAVfz55Y+AAioWoxZMTVqjEz8xEP8QSW4AyorIq+/8UCfgJNM0gMPqAn/Zhg0=",
			wantOpName: JettonTransferMsgOp,
			wantValue: JettonTransferMsgBody{
				QueryId:             7794402477181028,
				Amount:              tlb.VarUInteger16(*big.NewInt(5398024594888)),
				Destination:         mustAccountIDToMsgAddress("0:779dcc815138d9500e449c5291e7f12738c23d575b5310000f6a253bd607384e"),
				ResponseDestination: tlb.MsgAddress{SumType: "AddrNone"},
				ForwardTonAmount:    tlb.VarUInteger16(*big.NewInt(235000000)),
				ForwardPayload: tlb.EitherRef[JettonPayload]{
					IsRight: true,
					Value: JettonPayload{
						SumType: "StonfiProvideLiquidity",
						OpCode:  pointer[uint32](4244235663),
						Value: StonfiProvideLiquidityJettonPayload{
							TokenWallet: mustAccountIDToMsgAddress("0:1150b518b2626ad51899f98887f8824b70065456455f7fe2813f012699a4061f"),
							MinLpOut:    tlb.VarUInteger16(*big.NewInt(5367448326)),
						},
					},
				},
			},
		},
		{
			name:       "stonfi swap",
			boc:        "te6ccgEBAgEAoQABsSWThWEAF9FtgGlyuYAVUoS5uZxArCUbLyf7phLgN5PBW9e9kIid2rJzK9oArXAARULUYsmJq1RiZ+YiH+IJLcAZUVkVff+KBPwEmmaQGH1EVt4eddAYMnVDAQCFgBVShLm5nECsJRsvJ/umEuA3k8Fb172QiJ3asnMr2gCtcAGyO71SfAD9PQh0Amu3lB+P3U1Zntjnpj9CbVcj8DiPLg==",
			wantOpName: StonfiSwapMsgOp,
			wantValue: StonfiSwapMsgBody{
				QueryId:       6704192700379833,
				ToAddress:     mustAccountIDToMsgAddress("0:aa9425cdcce2056128d9793fdd309701bc9e0adebdec8444eed593995ed0056b"),
				SenderAddress: mustAccountIDToMsgAddress("0:1150b518b2626ad51899f98887f8824b70065456455f7fe2813f012699a4061f"),
				JettonAmount:  tlb.VarUInteger16(*big.NewInt(74549066199)),
				MinOut:        tlb.VarUInteger16(*big.NewInt(101490000)),
				HasRefAddress: true,
				Addrs: StonfiSwapAddrs{
					FromUser: mustAccountIDToMsgAddress("0:aa9425cdcce2056128d9793fdd309701bc9e0adebdec8444eed593995ed0056b"),
				},
			},
		},

		{
			name:       "jetton burn",
			boc:        "te6ccgECCAEAAhgAAW5ZXwe8AAAAAAAAAACVulPgrVndPmxoAEUNniLqkBYBsZuVKvJcDSg77tClhipfNGnRWwv1QqUlAQJTgBPgz6ZzvAvnHOQF+lB882wKxXE7ZY0rtYm62kdLeB7zIAAEiR+eUeC8AgMCCDr9RhwEBQIIOv1GHAYHANBmK2fQChP6+TJUcU3WAfXtSe8vUSFzb+JIL66ExgVAASEhVBcuBtTkkxBPFx4XRbIvc3+f6fNgS4XJZyco7uz2ic8fDPfdA/IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXdhP6lOTR5QDHgBPgz6ZzvAvnHOQF+lB882wKxXE7ZY0rtYm62kdLeB7zMAMIgSjQdRRiwBX6VMy+I534aRJd9U+w1kwaNFo04D/r7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfkSgDQZitn0AoT+vkyVHFN1gH17UnvL1GOiQxwqskzIxUIwTtMWPbWf61+n5fM5lvg1Mgq9A8LhLpVSV1iP50NgLOctKegUf6wO3O0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbjcf22wjvFOEAx4AT4M+mc7wL5xzkBfpQfPNsCsVxO2WNK7WJutpHS3ge8zADCIEo0HUUYsAV+lTMviOd+GkSXfVPsNZMGjRaNOA/6+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADH6Eo=",
			wantOpName: JettonBurnMsgOp,
			wantValidate: func(t *testing.T, value any) {
				got := value.(JettonBurnMsgBody)
				expected := JettonBurnMsgBody{
					QueryId:             0,
					Amount:              mustToVarUInteger16("1690560677084975589062"),
					ResponseDestination: mustToMsgAddress("0:2286cf1175480b00d8cdca95792e06941df76852c3152f9a34e8ad85faa15292"),
				}
				customPayload := got.CustomPayload
				got.CustomPayload = nil
				if !reflect.DeepEqual(got, expected) {
					t.Fatalf("got different result")
				}
				if mustToBoc(customPayload.Value.(*boc.Cell)) != "b5ee9c72010207010001de0002538013e0cfa673bc0be71ce405fa507cf36c0ac5713b658d2bb589bada474b781ef3200004891f9e51e0bc010202083afd461c030402083afd461c050600d0662b67d00a13faf93254714dd601f5ed49ef2f5121736fe2482fae84c6054001212154172e06d4e493104f171e1745b22f737f9fe9f3604b85c9672728eeecf689cf1f0cf7dd03f2000000000000000000000000000000000000000000000000177613fa94e4d1e500c78013e0cfa673bc0be71ce405fa507cf36c0ac5713b658d2bb589bada474b781ef33003088128d0751462c015fa54ccbe239df869125df54fb0d64c1a345a34e03febec000000000000000000000000000000000000000000000000000000000000c7e44a00d0662b67d00a13faf93254714dd601f5ed49ef2f518e890c70aac933231508c13b4c58f6d67fad7e9f97cce65be0d4c82af40f0b84ba55495d623f9d0d80b39cb4a7a051feb03b73b400000000000000000000000000000000000000000000005b8dc7f6db08ef14e100c78013e0cfa673bc0be71ce405fa507cf36c0ac5713b658d2bb589bada474b781ef33003088128d0751462c015fa54ccbe239df869125df54fb0d64c1a345a34e03febec000000000000000000000000000000000000000000000000000000000000c7e84a" {
					t.Fatalf("got different result")
				}
			},
		},
		{
			name:       "jetton burn 2",
			boc:        "te6ccgECCAEAAhkAAXBZXwe8AAAAAAAAAACgRsUa48wJE4AACAFDHixVJ+/V+/nuhEo7dt2+OJFdoy2NcbsmLo/peqKGyQECU4AXlkN9KNe8PwlEuhQXb8OEHdTRbc1wBsVtW0S0nHlci2AABHMz4N3IfAIDAgg6/UYcBAUCCDr9RhwGBwDQAAAAAAAAAAAAAAAAAAAAAAAAAAAhc2/iSC+uhMYFQAEhIVQXLgbU5JMQTxceF0WyL3N/n+nzYEuFyWcnKO7s9onPHwz33QPyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABId+piGJzAAAAx4AXlkN9KNe8PwlEuhQXb8OEHdTRbc1wBsVtW0S0nHlci3AAQX+vGOoGA6n5Sj2YhgmbypSzopG9d5E5wGpys2qSl/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBEoA0AAAAAAAAAAAAAAAAAAAAAAAAAAAzt5J5s1Bn1ucvSu1OKsAlM3gKUucgbp58v5g7juBGW5BWHshPHNaemrDKuINE8K9slIj+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEay/OkzguxQAAAMeAF5ZDfSjXvD8JRLoUF2/DhB3U0W3NcAbFbVtEtJx5XItwAEF/rxjqBgOp+Uo9mIYJm8qUs6KRvXeROcBqcrNqkpfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAghK",
			wantOpName: JettonBurnMsgOp,
			wantValidate: func(t *testing.T, value any) {
				got := value.(JettonBurnMsgBody)
				expected := JettonBurnMsgBody{
					QueryId:             0,
					Amount:              mustToVarUInteger16("20887600000000000000000"),
					ResponseDestination: mustToMsgAddress("0:a18f162a93f7eafdfcf742251dbb6edf1c48aed196c6b8dd931747f4bd514364"),
				}
				customPayload := got.CustomPayload
				got.CustomPayload = nil
				if !reflect.DeepEqual(got, expected) {
					t.Fatalf("got different result")
				}
				if mustToBoc(customPayload.Value.(*boc.Cell)) != "b5ee9c72010207010001de000253801796437d28d7bc3f0944ba14176fc3841dd4d16dcd7006c56d5b44b49c795c8b6000047333e0ddc87c010202083afd461c030402083afd461c050600d0000000000000000000000000000000000000000021736fe2482fae84c6054001212154172e06d4e493104f171e1745b22f737f9fe9f3604b85c9672728eeecf689cf1f0cf7dd03f200000000000000000000000000000000000000000000000121dfa9886273000000c7801796437d28d7bc3f0944ba14176fc3841dd4d16dcd7006c56d5b44b49c795c8b7000417faf18ea0603a9f94a3d9886099bca94b3a291bd779139c06a72b36a9297f000000000000000000000000000000000000000000000000000000000000002044a00d00000000000000000000000000000000000000000cede49e6cd419f5b9cbd2bb538ab0094cde0294b9c81ba79f2fe60ee3b81196e41587b213c735a7a6ac32ae20d13c2bdb25223f900000000000000000000000000000000000000000000046b2fce93382ec5000000c7801796437d28d7bc3f0944ba14176fc3841dd4d16dcd7006c56d5b44b49c795c8b7000417faf18ea0603a9f94a3d9886099bca94b3a291bd779139c06a72b36a9297f000000000000000000000000000000000000000000000000000000000000002084a" {
					t.Fatalf("got different result")
				}
			},
		},
		{
			name:       "stonfi pay to",
			boc:        "te6ccgEBAgEAfgABY/k7tD8AF9FtgGlyuYANkd3qk+AH6ehDoBNdvKD8fupqzPbHPTH6E2q5H4HEeWig8KgYAQCNMBjz2AApWA5YrFIkZa+bJ7vYJARri8uevEBP6Td4tUTty6RJsBAARULUYsmJq1RiZ+YiH+IJLcAZUVkVff+KBPwEmmaQGH4=",
			wantOpName: StonfiPaymentRequestMsgOp,
			wantValue: StonfiPaymentRequestMsgBody{
				QueryId:  6704192700379833,
				Owner:    mustAccountIDToMsgAddress("0:6c8eef549f003f4f421d009aede507e3f7535667b639e98fd09b55c8fc0e23cb"),
				ExitCode: 1158120768,
				Params: tlb.EitherRef[StonfiPayToParams]{
					IsRight: true,
					Value: StonfiPayToParams{
						Amount0Out:    tlb.VarUInteger16(*big.NewInt(102205)),
						Token0Address: mustAccountIDToMsgAddress("0:14ac072c56291232d7cd93ddec120235c5e5cf5e2027f49bbc5aa276e5d224d8"),
						Amount1Out:    tlb.VarUInteger16(*big.NewInt(0)),
						Token1Address: mustAccountIDToMsgAddress("0:1150b518b2626ad51899f98887f8824b70065456455f7fe2813f012699a4061f"),
					},
				},
			},
		},
		{
			name:       "dns delete record",
			boc:        "te6ccgEBAQEALgAAWE6x8PkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
			wantOpName: DeleteDnsRecordMsgOp,
			wantValue: DeleteDnsRecordMsgBody{
				QueryId: 0,
				Key:     [32]byte{},
			},
		},
		{
			name:       "change dns record",
			boc:        "te6ccgEBAgEAVgABWE6x8PkAAAAAAAAAAOjUQFCHPbqGWqfBcKtMzmTZCDmjTc/Wz3HRTgIFRDsbAQBJn9OABZ52txkSPKL5Nbt7Q4Bw1BOZWXYcf17GFqOfkCpGS1lgEA==",
			wantOpName: ChangeDnsRecordMsgOp,
			wantValue: ChangeDnsRecordMsgBody{
				QueryId: 0,
				Key:     tlb.Bits256(ton.MustParseHash("e8d44050873dba865aa7c170ab4cce64d90839a34dcfd6cf71d14e0205443b1b")), //hash("wallet")
				Value: tlb.DNSRecord{
					SumType: "DNSSmcAddress",
					DNSSmcAddress: struct {
						Address       tlb.MsgAddress
						SmcCapability tlb.SmcCapabilities
					}{
						Address:       pointer(ton.MustParseAccountID("EQAs87W4yJHlF8mt29ocA4agnMrLsOP69jC1HPyBUjJay-7l")).ToMsgAddress(),
						SmcCapability: tlb.SmcCapabilities{},
					},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			c, err := boc.DeserializeSinglRootBase64(tt.boc)
			if err != nil {
				cells, err := boc.DeserializeBocHex(tt.boc)
				if err != nil {
					t.Fatal(err)
				}
				c = cells[0]
			}
			opName, value, err := MessageDecoder(c)
			if err != nil {
				t.Fatalf("MessageDecoder() error: %v", err)
			}
			if opName != tt.wantOpName {
				t.Fatalf("got opname: %v, want: %v", opName, tt.wantOpName)
			}
			if tt.wantValidate != nil {
				tt.wantValidate(t, value)
				return
			}
			if !reflect.DeepEqual(tt.wantValue, value) {
				t.Fatalf("want value: \n%v\n, got: \n%v", tt.wantValue, value)
			}
		})
	}
}

func pointer[t any](v t) *t {
	return &v
}

func TestImplements(t *testing.T) {
	cases := []struct {
		iface      ContractInterface
		target     ContractInterface
		implements bool
	}{
		{Wallet, Wallet, true},
		{WalletV2R1, WalletV2R1, true},
		{WalletV2R2, WalletV2R1, false},
		{WalletV2R2, Wallet, true},
		{Wallet, WalletV2R2, false},
	}
	for _, c := range cases {
		if c.iface.Implements(c.target) != c.implements {
			t.Fatalf("iface %v implements %v: %v", c.iface, c.target, c.implements)
		}
	}

}
