<abi>
    <types>
        pay_to_params#_ amount0_out:(VarUInteger 16) token0_address:MsgAddress amount1_out:(VarUInteger 16) token1_address:MsgAddress = StonfiPayToParams;
        swap_addresses#_ from_user:MsgAddress = StonfiSwapAddrs;
    </types>
    <interface name="stonfi_pool">
        <get_method name="get_pool_data" version="stonfi"/>
    </interface>
    <interface name="stonfi_router">
        <get_method name="get_router_data" version="stonfi"/>
    </interface>

    <get_method name="get_router_data">
        <output version="stonfi" fixed_length="true">
            <int name="is_locked">bool</int>
            <slice name="admin_address">msgaddress</slice>
            <cell name="temp_upgrade">any</cell>
            <cell name="pool_code">any</cell>
            <cell name="jetton_lp_wallet_code">any</cell>
            <cell name="lp_account_code">any</cell>
        </output>
    </get_method>

    <get_method name="get_pool_address">
        <input>
            <slice name="token0">msgaddress</slice>
            <slice name="token1">msgaddress</slice>
        </input>
        <output version="stonfi" fixed_length="true">
            <slice name="pool_address">msgaddress</slice>
        </output>
    </get_method>

    <get_method name="get_expected_outputs">
        <input>
            <int name="amount">int257</int>
            <slice name="token_wallet">msgaddress</slice>
        </input>
        <output version="stonfi" fixed_length="true">
            <int name="out">int257</int>
            <int name="protocol_fee_out">int257</int>
            <int name="ref_fee_out">int257</int>
        </output>
    </get_method>

    <get_method name="get_pool_data">
        <output version="stonfi" fixed_length="true">
            <int name="reserve0">int257</int>
            <int name="reserve1">int257</int>
            <slice name="token0_address">msgaddress</slice>
            <slice name="token1_address">msgaddress</slice>
            <int name="lp_fee">uint8</int>
            <int name="protocol_fee">uint8</int>
            <int name="ref_fee">uint8</int>
            <slice name="protocol_fee_address">msgaddress</slice>
            <int name="collected_token0_protocol_fee">int257</int>
            <int name="collected_token1_protocol_fee">int257</int>
        </output>
    </get_method>

    <internal name="stonfi_swap" >
        swap#25938561 query_id:uint64 to_address:MsgAddress sender_address:MsgAddress
        jetton_amount:(VarUInteger 16) min_out:(VarUInteger 16) has_ref_address:Bool addrs:^StonfiSwapAddrs = InternalMsgBody;
    </internal>
    <internal name="stonfi_payment_request" fixed_length="true" >
        pay_to#f93bb43f query_id:uint64 owner:MsgAddress exit_code:uint32
        params:(Either StonfiPayToParams ^StonfiPayToParams) = InternalMsgBody;
    </internal>
    <jetton_payload name="stonfi_swap" >
        swap#25938561 token_wallet:MsgAddress min_out:(VarUInteger 16) to_address:MsgAddress referral_address:(Maybe MsgAddress) = JettonPayload;
    </jetton_payload>
    <jetton_payload name="stonfi_provide_liquidity">
        provide_liquidity#fcf9e58f token_wallet:MsgAddress min_lp_out:(VarUInteger 16) = JettonPayload;
    </jetton_payload>
    <jetton_payload name="stonfi_swap_ok" fixed_length="true">
        swap_success#c64370e5 = JettonPayload;
    </jetton_payload>
    <jetton_payload name="stonfi_swap_ok_ref" fixed_length="true">
        swap_success#45078540 = JettonPayload;
    </jetton_payload>
</abi>
